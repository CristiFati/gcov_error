language: cpp
sudo: false
dist: trusty

os: linux
addons:
  apt:
    sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-7"]
    packages: ["g++-7", "llvm-7-dev"]

before_script:
- set -e
- export CXX=g++-7
- mkdir build
- cd build

matrix:
  include:
  - name: "LLVM"
    script: cmake .. -DCMAKE_CXX_FLAGS="           -v" -DLINK_WITH_LLVM=YES
  - name: "Coverage"
    script: cmake .. -DCMAKE_CXX_FLAGS="--coverage -v"
  - name: "LLVM + Coverage"
    script: cmake .. -DCMAKE_CXX_FLAGS="--coverage -v" -DLINK_WITH_LLVM=YES

after_script:
- make VERBOSE=1
- ./Test
- ldd ./Test
- nm -S CMakeFiles/Test.dir/main.cpp.o
- (nm -S ./Test | grep __gcov_exit) || echo ./Test
- #for f in "/usr/lib/x86_64-linux-gnu/libstdc++.so.6" "/lib/x86_64-linux-gnu/libgcc_s.so.1" "/lib/x86_64-linux-gnu/libc.so.6" "/lib/x86_64-linux-gnu/libm.so.6"; do (nm -S ${f} 2>/dev/null | grep __gcov_exit) || echo ${f}; done
- #for f in $(ls /usr/lib/llvm-7/lib); do (nm -S /usr/lib/llvm-3.8/lib/${f} 2>/dev/null | grep __gcov_exit) || echo ${f}; done
- #for f in $(ls /lib/x86_64-linux-gnu/*gcov* 2>/dev/null); do (nm -S ${f} 2>/dev/null | grep __gcov_exit) || echo ${f}; done
- #apt list | grep installed | grep libgcc | grep dev
- #dpkg -L libgcc-7-dev
- _GCOV_LIB7=/usr/lib/gcc/x86_64-linux-gnu/7/libgcov.a
- (nm -S ${_GCOV_LIB7} 2>/dev/null | grep __gcov_exit) || echo ${_GCOV_LIB7}
- _GCOV_LIB48=/usr/lib/gcc/x86_64-linux-gnu/4.8/libgcov.a
- (nm -S ${_GCOV_LIB48} 2>/dev/null | grep __gcov_exit) || echo ${_GCOV_LIB48}
